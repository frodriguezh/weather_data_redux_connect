{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\frodriguez\\\\Documents\\\\react\\\\weather_data_redux_connect\\\\src\\\\containers\\\\LocationListContainer.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { setSelectedCity, setWeather } from '../actions';\nimport { getWeatherCities } from '../reducers';\nimport LocationList from '../components/LocationList';\nimport mapStateToProps from 'react-redux/lib/connect/mapStateToProps';\n\nclass LocationListContainer extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.handleSelectedLocation = city => {\n      this.props.setCity(city);\n    };\n  }\n\n  componentDidMount() {\n    this.props.setWeather(this.props.cities);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(LocationList, {\n      cities: this.props.citiesWeather,\n      onSelectedLocation: this.handleSelectedLocation,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }\n    });\n  }\n\n}\n\nLocationListContainer.propTypes = {\n  setCity: PropTypes.func.isRequired,\n  cities: PropTypes.array.isRequired,\n  citiesWeather: PropTypes.array\n};\n\nconst mapDispatchToProps = dispatch => ({\n  setCity: value => dispatch(setSelectedCity(value)),\n  setWeather: cities => dispatch(setWeather(cities))\n});\n\nmapStateToProps = state => ({\n  citiesWeather: getWeatherCities(state)\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LocationListContainer);","map":{"version":3,"sources":["C:/Users/frodriguez/Documents/react/weather_data_redux_connect/src/containers/LocationListContainer.js"],"names":["React","Component","PropTypes","connect","setSelectedCity","setWeather","getWeatherCities","LocationList","mapStateToProps","LocationListContainer","handleSelectedLocation","city","props","setCity","componentDidMount","cities","render","citiesWeather","propTypes","func","isRequired","array","mapDispatchToProps","dispatch","value","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,eAAT,EAA0BC,UAA1B,QAA6C,YAA7C;AACA,SAASC,gBAAT,QAAiC,aAAjC;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,eAAP,MAA4B,yCAA5B;;AAGA,MAAMC,qBAAN,SAAoCR,SAApC,CAA8C;AAAA;AAAA;;AAAA,SAM1CS,sBAN0C,GAMjBC,IAAI,IAAI;AAE7B,WAAKC,KAAL,CAAWC,OAAX,CAAmBF,IAAnB;AACH,KATyC;AAAA;;AAE1CG,EAAAA,iBAAiB,GAAG;AAChB,SAAKF,KAAL,CAAWP,UAAX,CAAsB,KAAKO,KAAL,CAAWG,MAAjC;AACH;;AAODC,EAAAA,MAAM,GAAG;AACL,wBACI,oBAAC,YAAD;AAAc,MAAA,MAAM,EAAE,KAAKJ,KAAL,CAAWK,aAAjC;AACE,MAAA,kBAAkB,EAAE,KAAKP,sBAD3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAIH;;AAhByC;;AAmB9CD,qBAAqB,CAACS,SAAtB,GAAkC;AAC9BL,EAAAA,OAAO,EAAEX,SAAS,CAACiB,IAAV,CAAeC,UADM;AAE9BL,EAAAA,MAAM,EAAEb,SAAS,CAACmB,KAAV,CAAgBD,UAFM;AAG9BH,EAAAA,aAAa,EAAEf,SAAS,CAACmB;AAHK,CAAlC;;AAMA,MAAMC,kBAAkB,GAAGC,QAAQ,KAAK;AACpCV,EAAAA,OAAO,EAAEW,KAAK,IAAID,QAAQ,CAACnB,eAAe,CAACoB,KAAD,CAAhB,CADU;AAEpCnB,EAAAA,UAAU,EAAEU,MAAM,IAAIQ,QAAQ,CAAClB,UAAU,CAACU,MAAD,CAAX;AAFM,CAAL,CAAnC;;AAMAP,eAAe,GAAGiB,KAAK,KAAK;AAAER,EAAAA,aAAa,EAAEX,gBAAgB,CAACmB,KAAD;AAAjC,CAAL,CAAvB;;AAEA,eAAetB,OAAO,CAACK,eAAD,EAAkBc,kBAAlB,CAAP,CAA6Cb,qBAA7C,CAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { setSelectedCity, setWeather  } from '../actions'\r\nimport { getWeatherCities } from '../reducers'\r\nimport LocationList from '../components/LocationList';\r\nimport mapStateToProps from 'react-redux/lib/connect/mapStateToProps';\r\n\r\n\r\nclass LocationListContainer extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.setWeather(this.props.cities)\r\n    }\r\n    \r\n    handleSelectedLocation = city => {\r\n\r\n        this.props.setCity(city)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <LocationList cities={this.props.citiesWeather} \r\n              onSelectedLocation={this.handleSelectedLocation} ></LocationList>\r\n        )\r\n    }\r\n}\r\n\r\nLocationListContainer.propTypes = {\r\n    setCity: PropTypes.func.isRequired,\r\n    cities: PropTypes.array.isRequired,\r\n    citiesWeather: PropTypes.array,\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({ \r\n    setCity: value => dispatch(setSelectedCity(value)),\r\n    setWeather: cities => dispatch(setWeather(cities))\r\n})\r\n\r\n\r\nmapStateToProps = state => ({ citiesWeather: getWeatherCities(state)})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LocationListContainer)"]},"metadata":{},"sourceType":"module"}