{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\frodriguez\\\\Documents\\\\react\\\\weather_data_redux_connect\\\\src\\\\components\\\\WeatherLocation\\\\index.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport CircularProgress from 'material-ui/CircularProgress';\nimport Location from './Location';\nimport WeatherData from './WeatherData';\nimport './styles.css';\n/*\r\n        const api_key = \"f99bbd9e4959b513e9bd0d7f7356b38d\";\r\n    const url = \"http://api.openweathermap.org/data/2.5/weather\";\r\n      componentWillMount() {\r\n        const { city } = this.state;\r\n        const api_weather = `${url}?q=${city}&appid=${api_key}`;\r\n        fetch(api_weather).then( data => {\r\n            return data.json();\r\n        }).then( weather_data => {\r\n            const data = transformWeather(weather_data);\r\n            this.setState({ data });\r\n        });\r\n      }*/\n\nconst WeatherLocation = _ref => {\n  let {\n    onWeatherLocationClick,\n    city,\n    data\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"weatherLocationCont\",\n    onClick: onWeatherLocationClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Location, {\n    city: city,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }), data ? /*#__PURE__*/React.createElement(WeatherData, {\n    data: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  }) : /*#__PURE__*/React.createElement(CircularProgress, {\n    size: 60,\n    thickness: 7,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }));\n};\n\nWeatherLocation.propTypes = {\n  city: PropTypes.string,\n  onWeatherLocationClick: PropTypes.func,\n  data: PropTypes.shape({\n    temperature: PropTypes.number.isRequired,\n    weatherState: PropTypes.string.isRequired,\n    humidity: PropTypes.number.isRequired,\n    wind: PropTypes.string.isRequired\n  })\n};\nexport default WeatherLocation;","map":{"version":3,"sources":["C:/Users/frodriguez/Documents/react/weather_data_redux_connect/src/components/WeatherLocation/index.js"],"names":["React","Component","PropTypes","CircularProgress","Location","WeatherData","WeatherLocation","onWeatherLocationClick","city","data","propTypes","string","func","shape","temperature","number","isRequired","weatherState","humidity","wind"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,gBAAP,MAA6B,8BAA7B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAO,cAAP;AAEI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAOA,MAAMC,eAAe,GAAG;AAAA,MAAC;AAAEC,IAAAA,sBAAF;AAA0BC,IAAAA,IAA1B;AAAgCC,IAAAA;AAAhC,GAAD;AAAA,sBACpB;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAqC,IAAA,OAAO,EAAEF,sBAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAEC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEKC,IAAI,gBAAG,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAEA,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,gBACL,oBAAC,gBAAD;AAAkB,IAAA,IAAI,EAAE,EAAxB;AAA4B,IAAA,SAAS,EAAE,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADoB;AAAA,CAAxB;;AAUAH,eAAe,CAACI,SAAhB,GAA4B;AACxBF,EAAAA,IAAI,EAAEN,SAAS,CAACS,MADQ;AAExBJ,EAAAA,sBAAsB,EAAEL,SAAS,CAACU,IAFV;AAGxBH,EAAAA,IAAI,EAAEP,SAAS,CAACW,KAAV,CAAgB;AAClBC,IAAAA,WAAW,EAAEZ,SAAS,CAACa,MAAV,CAAiBC,UADZ;AAElBC,IAAAA,YAAY,EAAEf,SAAS,CAACS,MAAV,CAAiBK,UAFb;AAGlBE,IAAAA,QAAQ,EAAEhB,SAAS,CAACa,MAAV,CAAiBC,UAHT;AAIlBG,IAAAA,IAAI,EAAEjB,SAAS,CAACS,MAAV,CAAiBK;AAJL,GAAhB;AAHkB,CAA5B;AAWA,eAAeV,eAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport CircularProgress from 'material-ui/CircularProgress';\r\nimport Location from './Location';\r\nimport WeatherData from './WeatherData';\r\nimport './styles.css';\r\n\r\n    /*\r\n\r\n\r\n        const api_key = \"f99bbd9e4959b513e9bd0d7f7356b38d\";\r\n        const url = \"http://api.openweathermap.org/data/2.5/weather\";\r\n\r\n        componentWillMount() {\r\n            const { city } = this.state;\r\n            const api_weather = `${url}?q=${city}&appid=${api_key}`;\r\n            fetch(api_weather).then( data => {\r\n                return data.json();\r\n            }).then( weather_data => {\r\n                const data = transformWeather(weather_data);\r\n                this.setState({ data });\r\n            });\r\n\r\n        }*/\r\n\r\n\r\nconst WeatherLocation = ({ onWeatherLocationClick, city, data }) => (\r\n    <div className='weatherLocationCont' onClick={onWeatherLocationClick} >\r\n        <Location city={city} /> \r\n        {data ? <WeatherData data={data} /> : \r\n        <CircularProgress size={60} thickness={7} />}\r\n    </div>\r\n\r\n);\r\n\r\n\r\nWeatherLocation.propTypes = {\r\n    city: PropTypes.string,\r\n    onWeatherLocationClick: PropTypes.func,\r\n    data: PropTypes.shape({\r\n        temperature: PropTypes.number.isRequired,\r\n        weatherState: PropTypes.string.isRequired,\r\n        humidity: PropTypes.number.isRequired,\r\n        wind: PropTypes.string.isRequired,\r\n    }),\r\n}\r\n\r\nexport default WeatherLocation;"]},"metadata":{},"sourceType":"module"}