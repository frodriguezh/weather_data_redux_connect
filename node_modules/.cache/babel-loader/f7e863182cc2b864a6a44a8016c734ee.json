{"ast":null,"code":"import { createSelector } from 'reselect';\nimport { toPairs } from 'lodash.topairs';\nimport { SET_FORECAST_DATA, GET_WEATHER_CITY, SET_WEATHER_CITY } from \"../actions\";\nexport const cities = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SET_FORECAST_DATA:\n      {\n        const {\n          city,\n          forecastData\n        } = action.payload;\n        return { ...state,\n          [city]: {\n            forecastData\n          }\n        };\n      }\n\n    case GET_WEATHER_CITY:\n      {\n        const city = action.payload;\n        return { ...state,\n          [city]: {\n            weather: null\n          }\n        };\n      }\n\n    case SET_WEATHER_CITY:\n      {\n        const {\n          city,\n          weather\n        } = action.payload;\n        return { ...state,\n          [city]: {\n            weather\n          }\n        };\n      }\n\n    default:\n      return state;\n  }\n};\nexport const getForecastDataFromCities = createSelector((state, city) => state[city] && state[city].forecastData, forecastData => forecastData);\n\nconst fromObjToArray = cities => toPairs(cities);\n\nexport const getWeatherCities = createSelector(state => fromObjToArray, cities => cities);","map":{"version":3,"sources":["C:/Users/frodriguez/Documents/react/weather_data_redux_connect/src/reducers/cities.js"],"names":["createSelector","toPairs","SET_FORECAST_DATA","GET_WEATHER_CITY","SET_WEATHER_CITY","cities","state","action","type","city","forecastData","payload","weather","getForecastDataFromCities","fromObjToArray","getWeatherCities"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;AACA,SAASC,OAAT,QAAwB,gBAAxB;AACA,SAASC,iBAAT,EAA4BC,gBAA5B,EAA8CC,gBAA9C,QAAsE,YAAtE;AAEA,OAAO,MAAMC,MAAM,GAAG,YAA0B;AAAA,MAAzBC,KAAyB,uEAAjB,EAAiB;AAAA,MAAZC,MAAY;;AAC5C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKN,iBAAL;AAAuB;AAEnB,cAAM;AAAEO,UAAAA,IAAF;AAAQC,UAAAA;AAAR,YAAyBH,MAAM,CAACI,OAAtC;AACA,eAAO,EAAE,GAAGL,KAAL;AAAY,WAACG,IAAD,GAAQ;AAACC,YAAAA;AAAD;AAApB,SAAP;AACH;;AACD,SAAKP,gBAAL;AAAsB;AAElB,cAAMM,IAAI,GAAGF,MAAM,CAACI,OAApB;AACA,eAAO,EAAE,GAAGL,KAAL;AAAY,WAACG,IAAD,GAAQ;AAAEG,YAAAA,OAAO,EAAE;AAAX;AAApB,SAAP;AACH;;AACD,SAAKR,gBAAL;AAAsB;AAElB,cAAM;AAAEK,UAAAA,IAAF;AAAQG,UAAAA;AAAR,YAAoBL,MAAM,CAACI,OAAjC;AACA,eAAO,EAAE,GAAGL,KAAL;AAAY,WAACG,IAAD,GAAQ;AAAEG,YAAAA;AAAF;AAApB,SAAP;AACH;;AAED;AACI,aAAON,KAAP;AAlBR;AAoBH,CArBM;AAuBP,OAAO,MAAMO,yBAAyB,GAClCb,cAAc,CAAC,CAACM,KAAD,EAAQG,IAAR,KAAiBH,KAAK,CAACG,IAAD,CAAL,IAAeH,KAAK,CAACG,IAAD,CAAL,CAAYC,YAA7C,EAA2DA,YAAY,IAAIA,YAA3E,CADX;;AAGP,MAAMI,cAAc,GAAGT,MAAM,IAAKJ,OAAO,CAACI,MAAD,CAAzC;;AACA,OAAO,MAAMU,gBAAgB,GACzBf,cAAc,CAACM,KAAK,IAAIQ,cAAV,EAA0BT,MAAM,IAAIA,MAApC,CADX","sourcesContent":["import { createSelector } from 'reselect';\r\nimport { toPairs } from 'lodash.topairs'\r\nimport { SET_FORECAST_DATA, GET_WEATHER_CITY, SET_WEATHER_CITY } from \"../actions\";\r\n\r\nexport const cities = (state = {} , action ) => {\r\n    switch (action.type) {\r\n        case SET_FORECAST_DATA:{\r\n\r\n            const { city, forecastData } = action.payload;\r\n            return { ...state, [city]: {forecastData}}\r\n        }\r\n        case GET_WEATHER_CITY:{\r\n\r\n            const city = action.payload;\r\n            return { ...state, [city]: { weather: null }}\r\n        }\r\n        case SET_WEATHER_CITY:{\r\n\r\n            const { city, weather } = action.payload;\r\n            return { ...state, [city]: { weather }}\r\n        }\r\n\r\n        default:    \r\n            return state;\r\n    }\r\n}\r\n\r\nexport const getForecastDataFromCities = \r\n    createSelector((state, city) => state[city] && state[city].forecastData, forecastData => forecastData);\r\n\r\nconst fromObjToArray = cities => (toPairs(cities))\r\nexport const getWeatherCities = \r\n    createSelector(state => fromObjToArray, cities => cities)\r\n"]},"metadata":{},"sourceType":"module"}