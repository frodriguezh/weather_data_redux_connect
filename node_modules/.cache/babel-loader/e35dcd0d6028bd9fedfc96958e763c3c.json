{"ast":null,"code":"import transformForecast from '../services/transformForecast';\nexport const SET_CITY = 'SET_CITY';\nexport const SET_FORECAST_DATA = 'SET_FORECAST_DATA';\nexport const SET_WEATHER = 'SET_WEATHER';\n\nconst setCity = payload => ({\n  type: SET_CITY,\n  payload\n});\n\nconst setForecastData = payload => ({\n  type: SET_FORECAST_DATA,\n  payload\n});\n\nconst api_key = \"f99bbd9e4959b513e9bd0d7f7356b38d\";\nconst url = \"http://api.openweathermap.org/data/2.5/forecast\";\nexport const setSelectedCity = payload => {\n  return dispatch => {\n    const url_forecast = `${url}?q=${payload}&appid=${api_key}`; //activar en el estado un indicador de busqueda de datos\n\n    dispatch(setCity(payload));\n    return fetch(url_forecast).then(data => data.json()).then(weather_data => {\n      const forecastData = transformForecast(weather_data); //console.log(forecastData);\n      //modificar el estado con el resultado de la promise (fetch)\n\n      dispatch(setForecastData({\n        city: payload,\n        forecastData\n      }));\n    });\n  };\n};\nexport const setWeather = payload => {\n  /*const api_key = \"f99bbd9e4959b513e9bd0d7f7356b38d\";\r\n  const url = \"http://api.openweathermap.org/data/2.5/weather\";\r\n    componentWillMount() {\r\n      const { city } = this.state;\r\n      const api_weather = `${url}?q=${city}&appid=${api_key}`;\r\n      fetch(api_weather).then( data => {\r\n          return data.json();\r\n      }).then( weather_data => {\r\n          const data = transformWeather(weather_data);\r\n          this.setState({ data });\r\n      });\r\n    }*/\n};","map":{"version":3,"sources":["C:/Users/frodriguez/Documents/react/weather_data_redux_connect/src/actions/index.js"],"names":["transformForecast","SET_CITY","SET_FORECAST_DATA","SET_WEATHER","setCity","payload","type","setForecastData","api_key","url","setSelectedCity","dispatch","url_forecast","fetch","then","data","json","weather_data","forecastData","city","setWeather"],"mappings":"AAAA,OAAOA,iBAAP,MAA8B,+BAA9B;AAEA,OAAO,MAAOC,QAAQ,GAAG,UAAlB;AACP,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,MAAMC,WAAW,GAAG,aAApB;;AAEP,MAAMC,OAAO,GAAGC,OAAO,KAAK;AAAEC,EAAAA,IAAI,EAAEL,QAAR;AAAkBI,EAAAA;AAAlB,CAAL,CAAvB;;AACA,MAAME,eAAe,GAAGF,OAAO,KAAK;AAAEC,EAAAA,IAAI,EAAEJ,iBAAR;AAA2BG,EAAAA;AAA3B,CAAL,CAA/B;;AAEA,MAAMG,OAAO,GAAG,kCAAhB;AACA,MAAMC,GAAG,GAAG,iDAAZ;AAGA,OAAO,MAAMC,eAAe,GAAGL,OAAO,IAAI;AACtC,SAAOM,QAAQ,IAAI;AACf,UAAMC,YAAY,GAAI,GAAEH,GAAI,MAAKJ,OAAQ,UAASG,OAAQ,EAA1D,CADe,CAGf;;AACAG,IAAAA,QAAQ,CAACP,OAAO,CAACC,OAAD,CAAR,CAAR;AAEA,WAAOQ,KAAK,CAACD,YAAD,CAAL,CAAoBE,IAApB,CACHC,IAAI,IAAKA,IAAI,CAACC,IAAL,EADN,EAELF,IAFK,CAGHG,YAAY,IAAI;AACZ,YAAMC,YAAY,GAAGlB,iBAAiB,CAACiB,YAAD,CAAtC,CADY,CAEZ;AAEA;;AACAN,MAAAA,QAAQ,CAACJ,eAAe,CAAC;AAAEY,QAAAA,IAAI,EAAEd,OAAR;AAAiBa,QAAAA;AAAjB,OAAD,CAAhB,CAAR;AACH,KATE,CAAP;AAYH,GAlBD;AAmBH,CApBM;AAsBP,OAAO,MAAME,UAAU,GAAGf,OAAO,IAAI;AAEjC;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIC,CAjBM","sourcesContent":["import transformForecast from '../services/transformForecast';\r\n\r\nexport const  SET_CITY = 'SET_CITY'\r\nexport const SET_FORECAST_DATA = 'SET_FORECAST_DATA'\r\nexport const SET_WEATHER = 'SET_WEATHER'\r\n\r\nconst setCity = payload => ({ type: SET_CITY, payload })\r\nconst setForecastData = payload => ({ type: SET_FORECAST_DATA, payload })\r\n\r\nconst api_key = \"f99bbd9e4959b513e9bd0d7f7356b38d\";\r\nconst url = \"http://api.openweathermap.org/data/2.5/forecast\";\r\n\r\n\r\nexport const setSelectedCity = payload => {\r\n    return dispatch => {\r\n        const url_forecast = `${url}?q=${payload}&appid=${api_key}`;\r\n\r\n        //activar en el estado un indicador de busqueda de datos\r\n        dispatch(setCity(payload))\r\n\r\n        return fetch(url_forecast).then(\r\n            data => (data.json())\r\n        ).then(\r\n            weather_data => {\r\n                const forecastData = transformForecast(weather_data);\r\n                //console.log(forecastData);\r\n\r\n                //modificar el estado con el resultado de la promise (fetch)\r\n                dispatch(setForecastData({ city: payload, forecastData }))\r\n            }\r\n        );\r\n\r\n    }\r\n} \r\n\r\nexport const setWeather = payload => { \r\n \r\n    /*const api_key = \"f99bbd9e4959b513e9bd0d7f7356b38d\";\r\n    const url = \"http://api.openweathermap.org/data/2.5/weather\";\r\n\r\n    componentWillMount() {\r\n        const { city } = this.state;\r\n        const api_weather = `${url}?q=${city}&appid=${api_key}`;\r\n        fetch(api_weather).then( data => {\r\n            return data.json();\r\n        }).then( weather_data => {\r\n            const data = transformWeather(weather_data);\r\n            this.setState({ data });\r\n        });\r\n\r\n    }*/\r\n\r\n}"]},"metadata":{},"sourceType":"module"}