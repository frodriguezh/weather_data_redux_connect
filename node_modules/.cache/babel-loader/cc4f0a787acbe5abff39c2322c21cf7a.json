{"ast":null,"code":"import { createSelector } from 'reselect';\nimport { SET_FORECAST_DATA, GET_WEATHER_CITY, SET_WEATHER_CITY } from \"../actions\";\nexport const cities = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SET_FORECAST_DATA:\n      {\n        const {\n          city,\n          forecastData\n        } = action.payload;\n        return { ...state,\n          [city]: {\n            forecastData\n          }\n        };\n      }\n\n    case GET_WEATHER_CITY:\n      {\n        const city = action.payload;\n        return { ...state,\n          [city]: null\n        };\n      }\n\n    case SET_WEATHER_CITY:\n      {\n        const city = action.payload;\n        return { ...state,\n          [city]: city\n        };\n      }\n\n    default:\n      return state;\n  }\n};\nexport const getForecastDataFromCities = createSelector((state, city) => state[city] && state[city].forecastData, forecastData => forecastData);","map":{"version":3,"sources":["C:/Users/frodriguez/Documents/react/weather_data_redux_connect/src/reducers/cities.js"],"names":["createSelector","SET_FORECAST_DATA","GET_WEATHER_CITY","SET_WEATHER_CITY","cities","state","action","type","city","forecastData","payload","getForecastDataFromCities"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;AACA,SAASC,iBAAT,EAA4BC,gBAA5B,EAA8CC,gBAA9C,QAAsE,YAAtE;AAEA,OAAO,MAAMC,MAAM,GAAG,YAA0B;AAAA,MAAzBC,KAAyB,uEAAjB,EAAiB;AAAA,MAAZC,MAAY;;AAC5C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKN,iBAAL;AAAuB;AAEnB,cAAM;AAAEO,UAAAA,IAAF;AAAQC,UAAAA;AAAR,YAAyBH,MAAM,CAACI,OAAtC;AACA,eAAO,EAAE,GAAGL,KAAL;AAAY,WAACG,IAAD,GAAQ;AAACC,YAAAA;AAAD;AAApB,SAAP;AACH;;AACD,SAAKP,gBAAL;AAAsB;AAElB,cAAMM,IAAI,GAAGF,MAAM,CAACI,OAApB;AACA,eAAO,EAAE,GAAGL,KAAL;AAAY,WAACG,IAAD,GAAQ;AAApB,SAAP;AACH;;AACD,SAAKL,gBAAL;AAAsB;AAElB,cAAMK,IAAI,GAAGF,MAAM,CAACI,OAApB;AACA,eAAO,EAAE,GAAGL,KAAL;AAAY,WAACG,IAAD,GAAQA;AAApB,SAAP;AACH;;AAED;AACI,aAAOH,KAAP;AAlBR;AAoBH,CArBM;AAuBP,OAAO,MAAMM,yBAAyB,GAClCX,cAAc,CAAC,CAACK,KAAD,EAAQG,IAAR,KAAiBH,KAAK,CAACG,IAAD,CAAL,IAAeH,KAAK,CAACG,IAAD,CAAL,CAAYC,YAA7C,EAA2DA,YAAY,IAAIA,YAA3E,CADX","sourcesContent":["import { createSelector } from 'reselect';\r\nimport { SET_FORECAST_DATA, GET_WEATHER_CITY, SET_WEATHER_CITY } from \"../actions\";\r\n\r\nexport const cities = (state = {} , action ) => {\r\n    switch (action.type) {\r\n        case SET_FORECAST_DATA:{\r\n\r\n            const { city, forecastData } = action.payload;\r\n            return { ...state, [city]: {forecastData}}\r\n        }\r\n        case GET_WEATHER_CITY:{\r\n\r\n            const city = action.payload;\r\n            return { ...state, [city]: null }\r\n        }\r\n        case SET_WEATHER_CITY:{\r\n\r\n            const city = action.payload;\r\n            return { ...state, [city]: city }\r\n        }\r\n\r\n        default:    \r\n            return state;\r\n    }\r\n}\r\n\r\nexport const getForecastDataFromCities = \r\n    createSelector((state, city) => state[city] && state[city].forecastData, forecastData => forecastData);\r\n"]},"metadata":{},"sourceType":"module"}