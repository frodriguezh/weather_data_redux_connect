{"ast":null,"code":"import convert from 'convert-units';\nimport { CLOUDY, SUN, RAIN, SNOW, THUNDER, DRIZZLE } from './../constants/weathers';\n\nconst getTemp = kelvin => {\n  return Number(convert(kelvin).from('K').to('C').toFixed(2));\n};\n\nconst getWeatherState = weather => {\n  const {\n    id\n  } = weather[0];\n\n  if (id < 300) {\n    return THUNDER;\n  } else if (id < 400) {\n    return DRIZZLE;\n  } else if (id < 600) {\n    return RAIN;\n  } else if (id < 700) {\n    return SNOW;\n  } else if (id === 800) {\n    return SUN;\n  } else {\n    return CLOUDY;\n  }\n};\n\nconst transformWeather = weather_data => {\n  const {\n    weather\n  } = weather_data;\n  const {\n    humidity,\n    temp\n  } = weather_data.main;\n  const {\n    speed\n  } = weather_data.wind;\n  const weatherState = getWeatherState(weather);\n  const temperature = getTemp(temp);\n  const data = {\n    humidity,\n    temperature,\n    weatherState,\n    wind: `${speed} m/s`\n  };\n  console(data);\n  return data;\n};\n\nexport default transformWeather;","map":{"version":3,"sources":["C:/Users/frodriguez/Documents/react/weather_data_redux_connect/src/services/transformWeather.js"],"names":["convert","CLOUDY","SUN","RAIN","SNOW","THUNDER","DRIZZLE","getTemp","kelvin","Number","from","to","toFixed","getWeatherState","weather","id","transformWeather","weather_data","humidity","temp","main","speed","wind","weatherState","temperature","data","console"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,eAApB;AACA,SAASC,MAAT,EACIC,GADJ,EAEIC,IAFJ,EAGIC,IAHJ,EAIIC,OAJJ,EAKIC,OALJ,QAKmB,yBALnB;;AAOA,MAAMC,OAAO,GAAGC,MAAM,IAAI;AACtB,SAAOC,MAAM,CAACT,OAAO,CAACQ,MAAD,CAAP,CAAgBE,IAAhB,CAAqB,GAArB,EAA0BC,EAA1B,CAA6B,GAA7B,EAAkCC,OAAlC,CAA0C,CAA1C,CAAD,CAAb;AACH,CAFD;;AAIA,MAAMC,eAAe,GAAGC,OAAO,IAAI;AAC/B,QAAM;AAAEC,IAAAA;AAAF,MAASD,OAAO,CAAC,CAAD,CAAtB;;AAEA,MAAIC,EAAE,GAAG,GAAT,EAAc;AACV,WAAOV,OAAP;AACH,GAFD,MAEO,IAAIU,EAAE,GAAG,GAAT,EAAc;AACjB,WAAOT,OAAP;AACH,GAFM,MAEA,IAAIS,EAAE,GAAG,GAAT,EAAc;AACjB,WAAOZ,IAAP;AACH,GAFM,MAEA,IAAIY,EAAE,GAAG,GAAT,EAAc;AACjB,WAAOX,IAAP;AACH,GAFM,MAEA,IAAIW,EAAE,KAAK,GAAX,EAAgB;AACnB,WAAOb,GAAP;AACH,GAFM,MAEA;AACH,WAAOD,MAAP;AACH;AACJ,CAhBD;;AAkBA,MAAMe,gBAAgB,GAAGC,YAAY,IAAI;AACrC,QAAM;AAAEH,IAAAA;AAAF,MAAcG,YAApB;AACA,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAqBF,YAAY,CAACG,IAAxC;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAYJ,YAAY,CAACK,IAA/B;AACA,QAAMC,YAAY,GAAGV,eAAe,CAACC,OAAD,CAApC;AACA,QAAMU,WAAW,GAAGjB,OAAO,CAACY,IAAD,CAA3B;AAEA,QAAMM,IAAI,GAAG;AACTP,IAAAA,QADS;AAETM,IAAAA,WAFS;AAGTD,IAAAA,YAHS;AAITD,IAAAA,IAAI,EAAG,GAAED,KAAM;AAJN,GAAb;AAOAK,EAAAA,OAAO,CAACD,IAAD,CAAP;AACA,SAAOA,IAAP;AACH,CAhBD;;AAkBA,eAAeT,gBAAf","sourcesContent":["import convert from 'convert-units';\r\nimport { CLOUDY, \r\n    SUN,\r\n    RAIN,\r\n    SNOW, \r\n    THUNDER, \r\n    DRIZZLE } from './../constants/weathers';\r\n\r\nconst getTemp = kelvin => {\r\n    return Number(convert(kelvin).from('K').to('C').toFixed(2));\r\n}\r\n\r\nconst getWeatherState = weather => {\r\n    const { id } = weather[0];\r\n\r\n    if (id < 300) {\r\n        return THUNDER;\r\n    } else if (id < 400) {\r\n        return DRIZZLE;\r\n    } else if (id < 600) {\r\n        return RAIN;\r\n    } else if (id < 700) {\r\n        return SNOW;\r\n    } else if (id === 800) {\r\n        return SUN;\r\n    } else {\r\n        return CLOUDY;\r\n    }\r\n}\r\n\r\nconst transformWeather = weather_data => {\r\n    const { weather } = weather_data;\r\n    const { humidity, temp } = weather_data.main;\r\n    const { speed } = weather_data.wind;\r\n    const weatherState = getWeatherState(weather);\r\n    const temperature = getTemp(temp);\r\n\r\n    const data = {\r\n        humidity, \r\n        temperature,\r\n        weatherState,\r\n        wind: `${speed} m/s`,\r\n    }\r\n\r\n    console(data)\r\n    return data;\r\n}\r\n\r\nexport default transformWeather;"]},"metadata":{},"sourceType":"module"}